/*
Nth term of Fibonacci series F(n), where F(n) is a function, is calculated using the following formula -
    F(n) = F(n-1) + F(n-2), 
    Where, F(1) =  1, 
           F(2) = 1
Provided N you have to find out the Nth Fibonacci Number.
Input Format :
The first line of each test case contains a real number ‘N’.
Output Format :
For each test case, return its equivalent Fibonacci number.
Constraints:
1 <= N <= 10000     
Where ‘N’ represents the number for which we have to find its equivalent Fibonacci number.

Time Limit: 1 second
Sample Input 1:
6
Sample Output 1:
8
Explanation of Sample Input 1:
Now the number is ‘6’ so we have to find the “6th” Fibonacci number
So by using the property of the Fibonacci series i.e 

[ 1, 1, 2, 3, 5, 8, 13, 21]
So the “6th” element is “8” hence we get the output.
--------------------------------------------------------------------------------------------------------------------------------------
*/

import java.util.Scanner;
public class Solution {


	public static void main(String[] args) {
		
		/* Your class should be named Solution.
	 	* Read input as specified in the question.
	 	* Print output as specified in the question.
		*/
        Scanner sc = new Scanner(System.in);
        int input = sc.nextInt();
        int n1 = 0;             //Initliaze three variables required to print fibonacci number
        int n2 = 1;
        int n3 = 0;
        
        for(int i = 1; i<input; i++){           //Use for loop to print till nth fibonacci number
            n3 = n1 + n2;        
            n1=n2;              
            n2 = n3;
            
        }
        if(input == 1){             //If input = 1, handle this test case
            n3 = input;
            System.out.println(n3);
        }
        else{
            System.out.println(n3);         //Else print the output
        }
        		
	}

}
